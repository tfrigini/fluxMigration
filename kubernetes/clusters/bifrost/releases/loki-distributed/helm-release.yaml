---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki-distributed
  namespace: loki-distributed
  annotations:
    fluxcd.io/ignore: "true"
spec:
  interval: 5m
  releaseName: loki-distributed
  targetNamespace: loki-distributed

  chart:
    spec:
      chart: loki
      version: "2.2.0"
      sourceRef:
        kind: HelmRepository
        name: loki
        namespace: flux-system
      interval: 1m

  maxHistory: 30

  values:

    loki:

      readinessProbe:
        httpGet:
          path: /ready
          port: http
        initialDelaySeconds: 30
        timeoutSeconds: 1

      image:
        registry: docker.io
        repository: grafana/loki
        tag: 2.2.0
        pullPolicy: IfNotPresent

      # -- Common annotations for all pods
      podAnnotations: {}

      # -- The number of old ReplicaSets to retain to allow rollback
      revisionHistoryLimit: 10

      # -- The SecurityContext for Loki pods
      podSecurityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001

      # -- The SecurityContext for Loki containers
      containerSecurityContext:
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        allowPrivilegeEscalation: false

      config: |
        auth_enabled: false

        server:
          log_level: info
          # Must be set to 3100
          http_listen_port: 3100

        distributor:
          ring:
            kvstore:
              store: memberlist

        memberlist:
          join_members:
            - {{ include "loki.fullname" . }}-memberlist

        ingester:
          lifecycler:
            ring:
              kvstore:
                store: memberlist
            replication_factor: 1
          chunk_idle_period: 30m
          chunk_block_size: 262144
          chunk_retain_period: 15m
          max_chunk_age: 1h
          chunk_encoding: snappy
          # Disable chunk transfer which is not possible with statefulsets
          # and unnecessary for boltdb-shipper
          max_transfer_retries: 0

        limits_config:
          ingestion_rate_mb: 10
          ingestion_burst_size_mb: 20
          max_label_name_length: 1024
          max_label_value_length: 2048
          max_label_names_per_series: 30
          reject_old_samples: true
          reject_old_samples_max_age: 168h
          max_streams_per_user: 10000
          max_entries_limit_per_query: 10000
          max_query_length: 168h

        schema_config:
          configs:
            - from: 2020-09-07
              store: boltdb-shipper
              object_store: filesystem
              schema: v11
              index:
                prefix: k8s-hmg-dev-indexes_
                period: 24h

        storage_config:
          boltdb_shipper:
            shared_store: filesystem
            active_index_directory: /var/loki/index
            cache_location: /var/loki/cache
            cache_ttl: 24h
          filesystem:
            directory: /var/loki/chunks

        query_range:
          # make queries more cache-able by aligning them with their step intervals
          align_queries_with_step: true
          max_retries: 5
          # parallelize queries in 15min intervals
          split_queries_by_interval: 15m
          cache_results: true
          results_cache:
            cache:
              enable_fifocache: true
              fifocache:
                max_size_items: 1024
                validity: 24h

        chunk_store_config:
          max_look_back_period: 2016h

        frontend_worker:
          frontend_address: {{ include "loki.queryFrontendFullname" . }}:9095

        frontend:
          log_queries_longer_than: 5s
          compress_responses: true

        compactor:
          shared_store: filesystem


    # Configuration for the ingester
    ingester:
      replicas: 1
      podAnnotations: {}
      resources:
        requests:
          cpu: 250m
          memory: 2Gi
        limits:
          cpu: "2"
          memory: 3Gi
      # -- Grace period to allow the ingester to shutdown before it is killed. Especially for the ingestor,
      # this must be increased. It must be long enough so ingesters can be gracefully shutdown flushing/transferring
      # all data and to successfully leave the member ring on shutdown.
      terminationGracePeriodSeconds: 300
      # -- Affinity for ingester pods. Passed through `tpl` and, thus, to be configured as string
      # @default -- Hard node and soft zone anti-affinity
      affinity: |
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  {{- include "loki.ingesterSelectorLabels" . | nindent 10 }}
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "loki.ingesterSelectorLabels" . | nindent 12 }}
                topologyKey: failure-domain.beta.kubernetes.io/zone
      persistence:
        # -- Enable creating PVCs which is required when using boltdb-shipper
        enabled: true
        size: 10Gi
        storageClass: gp2

    # Configuration for the distributor
    distributor:
      replicas: 1
      podAnnotations: {}
      resources:
        requests:
          cpu: 250m
          memory: 2Gi
        limits:
          cpu: "2"
          memory: 3Gi
      terminationGracePeriodSeconds: 30
      # -- Affinity for distributor pods. Passed through `tpl` and, thus, to be configured as string
      # @default -- Hard node and soft zone anti-affinity
      affinity: |
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  {{- include "loki.distributorSelectorLabels" . | nindent 10 }}
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "loki.distributorSelectorLabels" . | nindent 12 }}
                topologyKey: failure-domain.beta.kubernetes.io/zone

    # Configuration for the querier
    querier:
      replicas: 1
      podAnnotations: {}
      resources:
        requests:
          cpu: 250m
          memory: 2Gi
        limits:
          cpu: "2"
          memory: 3Gi
      terminationGracePeriodSeconds: 30
      # -- Affinity for querier pods. Passed through `tpl` and, thus, to be configured as string
      # @default -- Hard node and soft zone anti-affinity
      affinity: |
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  {{- include "loki.querierSelectorLabels" . | nindent 10 }}
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "loki.querierSelectorLabels" . | nindent 12 }}
                topologyKey: failure-domain.beta.kubernetes.io/zone
      persistence:
        # -- Enable creating PVCs for the querier cache
        enabled: false
        # -- Size of persistent disk
        size: 10Gi
        # -- Storage class to be used.
        # If defined, storageClassName: <storageClass>.
        # If set to "-", storageClassName: "", which disables dynamic provisioning.
        # If empty or set to null, no storageClassName spec is
        # set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).
        storageClass: null

    # Configuration for the query-frontend
    queryFrontend:
      replicas: 1
      podAnnotations: {}
      resources:
        requests:
          cpu: 250m
          memory: 2Gi
        limits:
          cpu: "2"
          memory: 3Gi
      terminationGracePeriodSeconds: 30
      # -- Affinity for query-frontend pods. Passed through `tpl` and, thus, to be configured as string
      # @default -- Hard node and soft zone anti-affinity
      affinity: |
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  {{- include "loki.queryFrontendSelectorLabels" . | nindent 10 }}
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "loki.queryFrontendSelectorLabels" . | nindent 12 }}
                topologyKey: failure-domain.beta.kubernetes.io/zone

    # Configuration for the gateway
    gateway:
      enabled: true
      replicas: 1
      image:
        registry: docker.io
        repository: nginxinc/nginx-unprivileged
        tag: 1.19-alpine
        pullPolicy: IfNotPresent
      podSecurityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsNonRoot: true
        runAsUser: 101
      # -- The SecurityContext for gateway containers
      containerSecurityContext:
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        allowPrivilegeEscalation: false
      # -- Resource requests and limits for the gateway
      resources:
        requests:
          cpu: 250m
          memory: 2Gi
        limits:
          cpu: "2"
          memory: 3Gi
      terminationGracePeriodSeconds: 30
      # -- Affinity for gateway pods. Passed through `tpl` and, thus, to be configured as string
      # @default -- Hard node and soft zone anti-affinity
      affinity: |
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  {{- include "loki.gatewaySelectorLabels" . | nindent 10 }}
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "loki.gatewaySelectorLabels" . | nindent 12 }}
                topologyKey: failure-domain.beta.kubernetes.io/zone
      # Gateway service configuration
      service:
        port: 80
        type: ClusterIP
        annotations: {}
      # Gateway ingress configuration
      ingress:
        enabled: false
        annotations: {}
        hosts:
          - host: gateway.loki.example.com
            paths:
              - /
        tls:
          - secretName: loki-gateway-tls
            hosts:
              - gateway.loki.example.com
      # Basic auth configuration
      basicAuth:
        # -- Enables basic authentication for the gateway
        enabled: false
        username: null
        password: null
        # -- Uses the specified username and password to compute a htpasswd using Sprig's `htpasswd` function.
        # The value is templated using `tpl`. Override this to use a custom htpasswd, e.g. in case the default causes
        # high CPU load.
        htpasswd: >-
          {{ htpasswd (required "'gateway.basicAuth.username' is required" .Values.gateway.basicAuth.username) (required "'gateway.basicAuth.password' is required" .Values.gateway.basicAuth.password) }}
        # -- Existing basic auth secret to use. Must contain '.htpasswd'
        existingSecret: null
      # Configures the readiness probe for the gateway
      readinessProbe:
        httpGet:
          path: /
          port: http
        initialDelaySeconds: 15
        timeoutSeconds: 1
      nginxConfig:
        # -- NGINX log format
        logFormat: |-
          main '$remote_addr - $remote_user [$time_local]  $status '
                  '"$request" $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
        # -- Allows appending custom configuration to the server block
        serverSnippet: ""
        # -- Allows appending custom configuration to the http block
        httpSnippet: ""
        # -- Config file contents for Nginx. Passed through the `tpl` function to allow templating
        # @default -- See values.yaml
        file: |
          worker_processes  5;  ## Default: 1
          error_log  /dev/stderr;
          pid        /tmp/nginx.pid;
          worker_rlimit_nofile 8192;

          events {
            worker_connections  4096;  ## Default: 1024
          }

          http {
            client_body_temp_path /tmp/client_temp;
            proxy_temp_path       /tmp/proxy_temp_path;
            fastcgi_temp_path     /tmp/fastcgi_temp;
            uwsgi_temp_path       /tmp/uwsgi_temp;
            scgi_temp_path        /tmp/scgi_temp;

            default_type application/octet-stream;
            log_format   {{ .Values.gateway.nginxConfig.logFormat }}
            access_log   /dev/stderr  main;
            sendfile     on;
            tcp_nopush   on;
            resolver {{ .Values.global.dnsService }}.kube-system.svc.{{ .Values.global.clusterDomain }};

            {{- with .Values.gateway.nginxConfig.httpSnippet }}
            {{ . | nindent 2 }}
            {{- end }}

            server {
              listen             8080;

              {{- if .Values.gateway.basicAuth.enabled }}
              auth_basic           "Loki";
              auth_basic_user_file /etc/nginx/secrets/.htpasswd;
              {{- end }}

              location = / {
                return 200 'OK';
                auth_basic off;
              }

              location = /api/prom/push {
                proxy_pass       http://{{ include "loki.distributorFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
              }

              location = /api/prom/tail {
                proxy_pass       http://{{ include "loki.querierFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
              }

              location ~ /api/prom/.* {
                proxy_pass       http://{{ include "loki.queryFrontendFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
              }

              location = /loki/api/v1/push {
                proxy_pass       http://{{ include "loki.distributorFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
              }

              location = /loki/api/v1/tail {
                proxy_pass       http://{{ include "loki.querierFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
              }

              location ~ /loki/api/.* {
                proxy_pass       http://{{ include "loki.queryFrontendFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
              }

              {{- with .Values.gateway.nginxConfig.serverSnippet }}
              {{ . | nindent 4 }}
              {{- end }}
            }
          }

    # Configuration for the compactor
    compactor:
      enabled: true
      podAnnotations: {}
      resources:
        requests:
          cpu: 250m
          memory: 2Gi
        limits:
          cpu: "2"
          memory: 3Gi
      terminationGracePeriodSeconds: 30
      persistence:
        # -- Enable creating PVCs for the compactor
        enabled: false
        # -- Size of persistent disk
        size: 10Gi
        # -- Storage class to be used.
        # If defined, storageClassName: <storageClass>.
        # If set to "-", storageClassName: "", which disables dynamic provisioning.
        # If empty or set to null, no storageClassName spec is
        # set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).
        storageClass: null
